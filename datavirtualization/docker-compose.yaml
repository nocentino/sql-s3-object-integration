services:
  config:
      build:
        context: .
        dockerfile: dockerfile.ssl
      volumes:
        - "./certs/:/certs/"
      command: sh /certs/generate_ssl.sh

  s3.example.com:
    image: quay.io/minio/minio
    platform: linux/amd64
    depends_on: 
      - config
    hostname: minio1
    networks:
      s3-data:
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - s3-data:/data
      - ./certs:/root/.minio/certs/
    environment:
      - MINIO_ROOT_USER=MYROOTUSER
      - MINIO_ROOT_PASSWORD=MYROOTPASSWORD
    command: server /data --console-address ":9001" 

  createbucket:
    image: minio/mc
    platform: linux/amd64
    networks:
      s3-data:
    depends_on:
      - s3.example.com
    volumes:
      - ./data:/tmp/data
    entrypoint: /bin/sh -c "sleep 60; 
                            /usr/bin/mc alias set s3admin https://s3.example.com:9000 MYROOTUSER MYROOTPASSWORD --api S3v4 --insecure; 
                            /usr/bin/mc admin user add s3admin anthony nocentino --insecure;
                            /usr/bin/mc admin policy attach s3admin readwrite --user anthony --insecure;
                            /usr/bin/mc alias set anthony https://s3.example.com:9000 anthony nocentino --insecure;
                            /usr/bin/mc mb anthony/sqldatavirt  --insecure;
                            /usr/bin/mc cp /tmp/data/helloworld.csv anthony/sqldatavirt/helloworld.csv --insecure;"
      
  sql1:
    platform: linux/amd64
    image: mcr.microsoft.com/mssql/server:2025-latest
    depends_on: 
      - config
      - createbucket
    hostname: sql1
    networks:
      - s3-data
    ports:
      - 1433:1433
    volumes:
      - sql-data:/var/opt/mssql
      - ./certs/public.crt:/var/opt/mssql/security/ca-certificates/public.crt:ro
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=S0methingS@Str0ng!

volumes:
  s3-data:
  sql-data:

networks:
  s3-data:
